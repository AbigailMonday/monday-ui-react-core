version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
  - image: "circleci/node:12.18.3-browsers"

filter_master_branch: &filter_master_branch
  filters:
    branches:
      only:
        - master

aliases:
  - &restore_node_cache
    restore_cache:
      name: restore node modules cache
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-
  - &save_node_cache
    save_cache:
      name: Save node modules cache
      key: v1-dependencies-{{ checksum "package.json" }}
      paths:
        - node_modules
  - &npm_install
    run:
      name: npm install
      command: |
        echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        npm install
  - &npm_rc
    run:
      name: npm rc create
      command: |
        echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

jobs:
  client_tests:
    docker:
      - image: "circleci/node:12.18.3-browsers"
    environment:
      CHROME_BIN: /usr/bin/google-chrome
    #resource_class: large
    steps:
      - checkout
      - run:
          name: install chrome binary
          shell: /bin/bash
          command: |
            curl -sS https://gist.githubusercontent.com/ervinb/54e500a3457a659264f891fe197cb66f/raw/chrome-wrapper.sh | sudo bash
      - *restore_node_cache
      - *npm_install
      - *save_node_cache
      - run:
          name: execute tests
          shell: /bin/bash
          no_output_timeout: 10m
          command: |
            npm run test-ci
            tests_exit_code=$?
            exit $tests_exit_code

  build:
    <<: *defaults
    steps:
      - checkout
      - *restore_node_cache
      - *npm_install
      - *save_node_cache
      - run:
          name: Build package
          command: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy_patch:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *npm_rc
      - run:
          name: Bump version
          command: npm run auto:bump-patch
      - run:
          name: Publish package
          command: npm publish

  deploy_minor:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *npm_rc
      - run:
          name: Bump version
          command: npm run auto:bump-minor
      - run:
          name: Publish package
          command: npm publish

  deploy_major:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *npm_rc
      - run:
          name: Bump version
          command: npm run auto:bump-major
      - run:
          name: Publish package
          command: npm publish

  publish_storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *npm_rc
      - run:
          name: Add github to trusted domains
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Publish storybook to github pages
          command: |
            npm run build-storybook -- -o static_storybook
            cd static_storybook
            echo "style.monday.beer" > ./CNAME
            git init
            git config user.name "GH Pages Bot"
            git config user.email "hello@ghbot.com"
            git config commit.gpgsign false
            git add .
            git commit -m "Deploy Storybook [ci-skip]"
            git push --force --quiet git@github.com:DaPulse/monday-style.git master:gh-pages

workflows:
  version: 2
  deploy_non_braking_changes_patch:
    jobs:
      - client_tests
      - begin_deploy:
          type: approval
          <<: *filter_master_branch
      - build:
          requires:
            - begin_deploy
            - client_tests
      - deploy_patch:
          requires:
            - build
          <<: *filter_master_branch
      - publish_storybook:
          requires:
            - deploy_patch
  deploy_non_braking_changes_minor:
    jobs:
      - client_tests
      - begin_deploy:
          type: approval
          <<: *filter_master_branch
      - build:
          requires:
            - begin_deploy
            - client_tests
      - deploy_minor:
          requires:
            - build
          <<: *filter_master_branch
      - publish_storybook:
          requires:
            - deploy_minor

  deploy_braking_changes:
    jobs:
      - client_tests
      - begin_deploy_breaking_changes:
          type: approval
          <<: *filter_master_branch
      - second_begin_deploy:
          type: approval
          requires:
            - begin_deploy_breaking_changes
          <<: *filter_master_branch
      - build:
          requires:
            - second_begin_deploy
            - client_tests
      - deploy_major:
          requires:
            - build
          <<: *filter_master_branch
      - publish_storybook:
          requires:
            - deploy_major

  storybook_deploy:
    jobs:
      - client_tests
      - begin_deploy:
          type: approval
      - build:
          requires:
            - begin_deploy
            - client_tests
      - publish_storybook:
          requires:
            - build
